{"version":3,"sources":["color.js","App.js","assets/fonts/PressStart2P-Regular.ttf"],"names":["theme","App","useFonts","PressStart","require","fontsLoaded","useState","working","setWorking","text","setText","toDos","setToDos","editText","setEditText","percent","setPercent","useEffect","loadToDos","loadApp","loadPercentage","countFunction","a","async","AsyncStorage","getItem","s","JSON","parse","console","log","p","w","c","count","Object","getOwnPropertyNames","length","entries","percentage","parseInt","setItem","stringify","saveToDos","toSave","keys","completed","key","newToDos","onChangeEditText","payload","View","style","styles","container","Text","balance","StatusBar","progressBar","Animated","StyleSheet","absoluteFill","backgroundColor","width","header","TouchableOpacity","activeOpacity","onPress","btnText","fontFamily","color","TextInput","returnKeyType","onChangeText","onSubmitEditing","undefined","Date","now","edit","value","input","placeholder","KeyboardAvoidingView","behavior","Platform","OS","keyboard","ScrollView","map","toDo","Fontisto","name","size","autoFocus","editInput","enablesReturnKeyAutomatically","editToDo","toDoText","textDecorationLine","editDelete","Feather","confirm","Alert","alert","deleteToDo","create","flex","paddingHorizontal","justifyContent","flexDirection","marginTop","fontSize","fontWeight","paddingVertical","borderRadius","marginVertical","height","marginBottom","alignItems","marginLeft","borderColor","borderWidth","alignSelf","module","exports"],"mappings":"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","file":"static/js/app.09f35177.chunk.js","sourcesContent":["export const theme = {\n    bg: \"black\",\n    gray: \"#3A3D40\",\n    toDoBg: \"#5C5C60\",\n}","import { useFonts } from \"expo-font\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  TextInput,\n  ScrollView,\n  Alert,\n  KeyboardAvoidingView,\n  Platform,\n  Animated,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { theme } from \"./color\";\nimport { Fontisto } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\n\n// import { LogBox } from \"react-native\";\n// // LogBox.ignoreLogs([\"Warning: ...\"]); // Ignore log notification by message\n// LogBox.ignoreAllLogs(); //Ignore all log notifications\n\nconst STORAGE_KEY = \"@toDos\";\nconst WORK_LIFE_KEY = \"@workLife\";\nconst PERCENT_KEY = \"@percent\";\n\nexport default function App() {\n  let [fontsLoaded] = useFonts({\n    PressStart: require(\"./assets/fonts/PressStart2P-Regular.ttf\"),\n    // 'SourceCodePro':require('./assets/fonts/SourceCodePro-VariableFont_wght.ttf'),\n    // 'Fira': require('./assets/fonts/FiraCode-VariableFont_wght.ttf'),\n  });\n\n  const [working, setWorking] = useState(true);\n  const [text, setText] = useState(\"\");\n  const [toDos, setToDos] = useState({});\n  const [editText, setEditText] = useState();\n  const [percent, setPercent] = useState(50);\n  // AsyncStorage.clear()\n  useEffect(() => {\n    loadToDos();\n    loadApp();\n    loadPercentage();\n  }, []);\n\n  useEffect(() => {\n    countFunction();\n  }, [toDos, percent]);\n\n  const loadToDos = async () => {\n    try {\n      const s = await AsyncStorage.getItem(STORAGE_KEY);\n      // if (JSON.parse(s) === null) {\n      //   await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify({}));\n      // }\n      // setToDos(JSON.parse(s));\n      if (s) {\n        setToDos(JSON.parse(s));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const loadPercentage = async () => {\n    let p = await AsyncStorage.getItem(PERCENT_KEY);\n    if (JSON.parse(p) === null) {\n      setPercent(50);\n    } else {\n      setPercent(JSON.parse(p));\n    }\n  };\n  // To stay at the same side (WORK/LIFE) when refreshed\n  const loadApp = async () => {\n    let w = await AsyncStorage.getItem(WORK_LIFE_KEY);\n    if (w === null) {\n      w = true;\n    }\n    setWorking(JSON.parse(w));\n  };\n\n  const countFunction = async () => {\n    let c = 0;\n    const count = Object.getOwnPropertyNames(toDos).length;\n    for (const [key, value] of Object.entries(toDos)) {\n      if (value.working === true) {\n        c += 1;\n      }\n      let percentage = (c / count) * 100;\n      if (count === 0) {\n        setPercent(50);\n      } else {\n        setPercent(parseInt(percentage));\n      }\n    }\n    await AsyncStorage.setItem(PERCENT_KEY, JSON.stringify(percent));\n  };\n\n  const work = async () => {\n    setWorking(true);\n    try {\n      await AsyncStorage.setItem(WORK_LIFE_KEY, JSON.stringify(true));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const life = async () => {\n    setWorking(false);\n    try {\n      await AsyncStorage.setItem(WORK_LIFE_KEY, JSON.stringify(false));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChangeText = (payload) => setText(payload);\n\n  const saveToDos = async (toSave) => {\n    try {\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave));\n    } catch (e) {\n      console.log(e);\n    }\n    if (Object.keys(toSave).length === 0) {\n      setPercent(50);\n    }\n  };\n\n  const addToDo = async () => {\n    if ((text === \"\") | (text === undefined)) {\n      return;\n    }\n    const newToDos = {\n      ...toDos,\n      [Date.now()]: {\n        text,\n        working,\n        completed: false,\n        edit: false,\n      },\n    };\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n    setText(\"\");\n  };\n\n  const deleteToDo = async (key) => {\n    const newToDos = { ...toDos };\n    if (Platform.OS === \"web\") {\n      const ok = confirm(\"Are you sure to delete this TODO?\");\n      if (ok) {\n        delete newToDos[key];\n        setToDos(newToDos);\n        await saveToDos(newToDos);\n      }\n    }\n    if (toDos[key].completed) {\n      delete newToDos[key];\n      setToDos(newToDos);\n      await saveToDos(newToDos);\n    } else {\n      Alert.alert(\"Delete ToDo\", \"Are you sure?\", [\n        { text: \"Cancel\" },\n        {\n          text: \"Delete\",\n          style: \"destructive\",\n          onPress: async () => {\n            delete newToDos[key];\n            setToDos(newToDos);\n            await saveToDos(newToDos);\n          },\n        },\n      ]);\n      return;\n    }\n  };\n\n  const completed = async (key) => {\n    const newToDos = { ...toDos };\n    if (!newToDos[key].completed) {\n      newToDos[key].completed = true;\n    } else {\n      newToDos[key].completed = false;\n    }\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n  };\n\n  const edit = async (key) => {\n    const newToDos = { ...toDos };\n    if (newToDos[key].edit === false) {\n      newToDos[key].edit = true;\n    } else {\n      newToDos[key].edit = false;\n    }\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n    setEditText(\"\");\n  };\n\n  const onChangeEditText = (payload) => setEditText(payload);\n\n  const editToDo = async (key) => {\n    const newToDos = { ...toDos };\n    newToDos[key].edit = false;\n    if (editText === \"\") {\n      newToDos[key].text = toDos[key].text;\n    } else {\n      newToDos[key].text = editText;\n    }\n    setToDos(newToDos);\n    await saveToDos(newToDos);\n    setEditText(\"\");\n  };\n\n  if (!fontsLoaded) {\n    return (\n      <View>\n        <Text>loading...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.balance}>BALANCE</Text>\n      <StatusBar style=\"light\" />\n      <View style={styles.progressBar}>\n        <Animated.View\n          style={\n            ([StyleSheet.absoluteFill],\n            { backgroundColor: \"tomato\", width: `${percent}%` })\n          }\n        />\n      </View>\n\n      <View style={styles.header}>\n        <TouchableOpacity activeOpacity={0} onPress={work}>\n          <Text\n            style={{\n              ...styles.btnText,\n              fontFamily: \"PressStart\",\n              color: working ? \"tomato\" : theme.gray,\n            }}\n          >\n            Work\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity activeOpacity={0} onPress={life}>\n          <Text\n            style={{\n              ...styles.btnText,\n              fontFamily: \"PressStart\",\n              color: !working ? \"teal\" : theme.gray,\n            }}\n          >\n            Life\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <TextInput\n        returnKeyType=\"done\"\n        onChangeText={onChangeText}\n        onSubmitEditing={addToDo}\n        value={text}\n        style={styles.input}\n        placeholder={working ? \"have ToDo\" : \"want ToDo\"}\n      />\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.keyboard}\n      >\n        <ScrollView>\n          {Object.keys(toDos).map((key) =>\n            toDos[key].working === working ? (\n              <View style={styles.toDo} key={key}>\n                {!toDos[key].completed ? (\n                  <TouchableOpacity onPress={() => completed(key)}>\n                    <Fontisto name=\"checkbox-passive\" size={18} color=\"white\" />\n                  </TouchableOpacity>\n                ) : (\n                  <TouchableOpacity onPress={() => completed(key)}>\n                    <Fontisto name=\"checkbox-active\" size={18} color=\"white\" />\n                  </TouchableOpacity>\n                )}\n                {!toDos[key].edit ? (\n                  <View>\n                    <Text\n                      style={{\n                        ...styles.toDoText,\n                        fontFamily: \"PressStart\", // web\n                        textDecorationLine: toDos[key].completed\n                          ? \"line-through\"\n                          : null,\n                      }}\n                    >\n                      {toDos[key].text}\n                    </Text>\n                  </View>\n                ) : (\n                  <TextInput\n                    autoFocus\n                    returnKeyType=\"done\"\n                    onChangeText={onChangeEditText}\n                    value={editText}\n                    placeholder={toDos[key].text}\n                    style={styles.editInput}\n                    enablesReturnKeyAutomatically\n                    onSubmitEditing={() => editToDo(key)}\n                  />\n                )}\n                <View style={styles.editDelete}>\n                  <TouchableOpacity onPress={() => edit(key)}>\n                    <Feather style={{}} name=\"edit\" size={20} color=\"white\" />\n                  </TouchableOpacity>\n                  <Text> </Text>\n                  <TouchableOpacity onPress={() => deleteToDo(key)}>\n                    <Fontisto name=\"trash\" size={18} color={theme.toDoBg} />\n                  </TouchableOpacity>\n                </View>\n              </View>\n            ) : null\n          )}\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20,\n    fontFamily: \"PressStart\",\n  },\n  keyboard: {\n    flex: 1,\n    backgroundColor: theme.bg,\n  },\n  header: {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 10,\n  },\n  btnText: {\n    fontSize: 38,\n    fontWeight: \"600\",\n    fontFamily: \"PressStart\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    marginVertical: 20,\n    fontSize: 18,\n    fontFamily: \"PressStart\",\n    height: Platform.OS === \"android\" ? 55 : 50,\n  },\n  editInput: {\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 10,\n    marginVertical: 20,\n    fontSize: 18,\n    width: 245,\n    fontFamily: \"PressStart\",\n  },\n  toDo: {\n    backgroundColor: theme.gray,\n    marginBottom: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  toDoText: {\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"500\",\n    width: 245,\n    marginLeft: 10,\n    fontFamily: \"PressStart\",\n  },\n  editDelete: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  progressBar: {\n    marginTop: 10,\n    height: 30,\n    flexDirection: \"row\",\n    backgroundColor: \"teal\",\n    borderColor: \"#000\",\n    borderWidth: 2,\n  },\n  balance: {\n    color: \"white\",\n    marginTop: 80,\n    alignSelf: \"center\",\n    fontSize: 37,\n    fontWeight: \"500\",\n    fontFamily: \"PressStart\",\n  },\n});\n","module.exports = __webpack_public_path__ + \"./fonts/PressStart2P-Regular.ttf\";"],"sourceRoot":""}